package com.project.demo.bank.customer;

import java.math.BigDecimal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping(value = "/bank-demo")
public class CustomerController {
	
	@Autowired
	private CustomerService customerService;
	
	public CustomerService getCustomerService() {
		return customerService;
	}
	public void setCustomerService(CustomerService customerService) {
		this.customerService = customerService;
	}
	@GetMapping("/bank-demo/customers")
	public List<Customer> getAllCustomers(){
		return customerService.getAllCustomers();
	}
	@GetMapping("/bank-demo/customers/{id}")
	public Customer getCustomerByID(@PathVariable String id){
		return customerService.getCustomerByID(id);
		
	}
	@RequestMapping(method=RequestMethod.POST, value="/bank-demo/customers")
	public void addCustomer(@RequestBody Customer customer){
		customerService.addCustomer(customer);
	}
	
	@RequestMapping(method=RequestMethod.PUT, value="/bank-demo/customers/{id}")
	public void updateCustomer(@RequestBody Customer customer, @PathVariable String id){
		customerService.updateCustomer(customer,id);
	}
	
	@RequestMapping(method=RequestMethod.DELETE, value="/bank-demo/customers")
	public void deleteAll(){
		customerService.deleteAll();
	}
	
	@RequestMapping(method=RequestMethod.DELETE, value="/bank-demo/customers/{id}")
	public void deleteCustomerByID(@PathVariable String id){
		customerService.deleteCustomerByID(id);
	}
	
	@RequestMapping(method=RequestMethod.POST,value="/bank-demo/customers/transfers/{fromCustomerId}/{toCustomerId}/{amount}")
	public void transferFunds(@PathVariable String fromCustomerId,@PathVariable String toCustomerId, @PathVariable BigDecimal amount){
		customerService.transferFunds(fromCustomerId,toCustomerId,amount);
		
	}
}
